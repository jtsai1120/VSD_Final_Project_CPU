start:
    addi t0, x0, 1          # t0 = f1 = 1
    addi t1, x0, 1          # t1 = f2 = 1
    addi t2, x0, 1          # t2 = pointer point to mem[1]

    ld t0, 0(t2)            # mem[1] = f1
    ld t1, 8(t2)            # mem[2] = f2

    addi t3, x0, 18         # t3 = 18 (number of remaining Fibonacci numbers to calculate)
    addi t2, t2, 16         # t2 = address of mem[3]

fib_loop:
    beq t3, x0, end         # if t3 == 0, end loop

    add t4, t0, t1          # t4 = f_cur = f_prv1 + f_prv2
    sd t4, 0(t2)            # mem[i] = f_cur

    addi t0, t1, 0          # f_prv2 = f_prv1
    addi t1, t4, 0          # f_prv1 = f_cur

    addi t2, t2, 8          # move to next memory location
    addi t3, t3, -1         # decrement loop counter
    jal x0, fib_loop        # repeat loop

end:
    halt